<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[RockPaperScissors]]></title>
  <link href="http://lizard-spock.co.uk/atom.xml" rel="self"/>
  <link href="http://lizard-spock.co.uk/"/>
  <updated>2014-06-19T19:12:06+01:00</updated>
  <id>http://lizard-spock.co.uk/</id>
  <author>
    <name><![CDATA[Morgan Prior]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Adobe Creative Cloud Is ...]]></title>
    <link href="http://lizard-spock.co.uk/blog/photography/adobe-creative-cloud-is-dot-dot-dot/"/>
    <updated>2014-06-19T18:15:59+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/photography/adobe-creative-cloud-is-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>Inconsistent, annoying, <strong>cheap</strong>?</p>

<!-- more -->


<p>My main bugbear with the creative cloud application is the way it updates applications.
Photoshop CC and Lightroom are handled differently.</p>

<p>Photoshop switches from installed to update. Which is great it will pull in the update on my command.</p>

<p>Lightroom switches from Installed to <strong>Try</strong>.</p>

<p>Not only that but I have now have 2 version of Photoshop CC and CC (2014) ready
for updates, one of which has not already been installed.</p>

<p>SO I have 2 applications with updates ready, one wants an update the other refuses
to acknowledge it has been installed and wants a new install. A new program,
Photoshop CC (2014), which only requires an update.</p>

<p><img src="http://lizard-spock.co.uk/images/Photography/CC_update.png" title="Adobe Creative Cloud is Inconsistent" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Categories with Different Styles]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/octopress-categories-with-different-styles/"/>
    <updated>2014-06-14T08:24:01+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/octopress-categories-with-different-styles</id>
    <content type="html"><![CDATA[<p>As I use the code blocks for ingredient lists on my recipe pages I wanted to
have a different style, lighter background instead of black.</p>

<p>I currently manually set a different layout in the _post header:</p>

<pre><code>layout: post
categories: 
- Tech

layout: recipe
categories: 
- Cooking
</code></pre>

<!-- more -->


<p>The layout will then look for a matching layout in <code>source/_layouts</code></p>

<p>Manually create your new layout (instructions from top level Octopress site):</p>

<pre><code>cp source/_layouts/post.html source/_layouts/recipe.html
</code></pre>

<p>Edit <code>source/_layouts/recipe.html</code> changing the role to <code>recipe</code>:</p>

<pre><code>---
layout: default
single: true
---

&lt;div&gt;
&lt;article class="hentry" role="recipe"&gt;
  \{\% include article.html \%\}
  &lt;footer&gt;
    &lt;p class="meta"&gt;
</code></pre>

<p>This will now pick up the styling that <code>post</code> also gets but we can target our modifications to <code>article[role="recipe"]</code>.
For custom stylings apply changes in to the relevant file in <code>sass/custom/</code>.</p>

<p>To modify the background colour of a code block<br/>
<code>sass/custom/_styles.scss</code> add:</p>

<pre><code>// Customise the recipe layout
article[role="recipe"] pre {
  background-color: $sidebar-bg;
}
</code></pre>

<p>NB: <code>$sidebar-bg</code> is defined in <code>sass/base/_theme.scss</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Verilog: Timeout]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/verilog-timeout/"/>
    <updated>2014-06-14T08:08:26+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/verilog-timeout</id>
    <content type="html"><![CDATA[<p>To wait for a maximum of <code>10ns</code> for positive edge on clk then carry on with simulation.</p>

<pre><code>fork : wait_or_timeout
  begin
    #10ms;
    disable wait_or_timeout;
  end
  begin
    @(posedge clk);
    disable wait_or_timeout;
  end
join
</code></pre>

<p>Often use to fail simulation if the expected signal does not occur,
this stops simulation hanging and allows status reports to be generated.</p>

<p>Originally posted as <a href="http://stackoverflow.com/a/12372233/97073">SO answer</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matlab Remove Elements from Array]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/matlab-remove-elements-from-array/"/>
    <updated>2014-06-02T19:08:09+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/matlab-remove-elements-from-array</id>
    <content type="html"><![CDATA[<p>Removing elements based on index</p>

<pre><code>A      = 1:10    ; % 1-D array
A =
 1     2     3     4     5     6     7     8     9    10

ind    = [1 4 7] ; % indices to be removed
A(ind) = []      ; % remove

A =
 2     3     5     6     8     9    10
</code></pre>

<p>Based on <a href="http://www.mathworks.co.uk/matlabcentral/newsreader/view_thread/1486880">Matlab Central</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matlab: Formatting Strings]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/matlab-formatting-strings/"/>
    <updated>2014-06-02T18:46:09+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/matlab-formatting-strings</id>
    <content type="html"><![CDATA[<p>The official documentation can be found on <a href="http://www.mathworks.co.uk/help/matlab/matlab_prog/formatting-strings.html#bq0z8vc-6">mathworks</a>.</p>

<p>To display a number with 3 Integer decimal places and 3 fraction places
<code>$f7.3</code> 7 rather than 6 as need place for the decimal point.</p>

<pre><code>&gt;&gt; a = sprintf('6.3-%6.3f-', 123.678)
a =
6.3-123.678-

&gt;&gt; a = sprintf('6.3-%6.3f-', 23.678)
a =
6.3-23.678-

&gt;&gt; a = sprintf('6.3-%6.3f-', 3.678)
a =
6.3- 3.678-
</code></pre>

<h2>-ve numbers</h2>

<p>If signed you need to leave space for -ve <code>$f8.3</code> :</p>

<pre><code>&gt;&gt; a = sprintf('7.3-%7.3f-', -123.678)
a =
7.3--123.678-

&gt;&gt; a = sprintf('7.3-%7.3f-', -23.678)
a =
7.3--23.678-

&gt;&gt; a = sprintf('8.3-%8.3f-', -23.678)
a =
8.3- -23.678-
</code></pre>

<p>For reliable and consistent floating point displays use:</p>

<pre><code>%(fractional places + integer places + 2).(fractional places)f
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matlab: Grid]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/matlab-grid/"/>
    <updated>2014-05-28T19:49:38+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/matlab-grid</id>
    <content type="html"><![CDATA[<p><img src="http://lizard-spock.co.uk/images/Engineering/matlab_grid/grid_on.png" alt="" /></p>

<p>To add X and Y grids to plots :</p>

<pre><code>grid on;
</code></pre>

<!-- more -->


<p><img src="http://lizard-spock.co.uk/images/Engineering/matlab_grid/y_grid_on.png" alt="" /></p>

<p>To add Y only grid:</p>

<pre><code>set(gca,'XGrid','off','YGrid','on');
</code></pre>

<p><img src="http://lizard-spock.co.uk/images/Engineering/matlab_grid/x_grid_on.png" alt="" /></p>

<p>To add X only grid</p>

<pre><code>set(gca,'XGrid','on','YGrid',’off');
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matlab: Line Breaks in Strings]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/matlab-linebreaks-in-strings/"/>
    <updated>2014-05-28T19:34:30+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/matlab-linebreaks-in-strings</id>
    <content type="html"><![CDATA[<p>Wrap strings with <code>sprintf</code> to allow the <code>\n</code> to be escaped correctly.</p>

<pre><code>&gt;&gt; disp('hello\nworld')
hello\nworld

&gt;&gt; disp(sprintf('hello\nworld'))
hello
world
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matlab: Listing Field Name Values of a Struct]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/matlab-listing-field-name-values-of-a-struct/"/>
    <updated>2014-05-28T19:05:01+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/matlab-listing-field-name-values-of-a-struct</id>
    <content type="html"><![CDATA[<pre><code>s = struct ;
s(1).dat =‘a' ;
s(1).freq=11 ;
s(2).dat =‘b' ;
s(2).freq=22 ;
</code></pre>

<p>Where:</p>

<pre><code>s(1)

ans =

     dat: 'a'
    freq: 11
</code></pre>

<p>How do you access [‘a’, ‘b’] and [11, 22]?</p>

<pre><code>[s.dat] , [s.freq]
</code></pre>

<p>The <code>[]</code> are really important here.</p>

<pre><code>[s.freq]

ans =

    11    22
</code></pre>

<p><a href="http://blogs.mathworks.com/loren/2007/04/19/vectorizing-access-to-an-array-of-structures/">Solution found on a Loren Post</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fstop ICU Strobies]]></title>
    <link href="http://lizard-spock.co.uk/blog/photography/fstop-icu-strobies/"/>
    <updated>2014-05-28T18:44:55+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/photography/fstop-icu-strobies</id>
    <content type="html"><![CDATA[<p>My large ICU loaded with my <a href="http://www.wexphotographic.com/buy-interfit-strobies-portrait-kit/p1031888">Strobies portrait kit</a> and Canon 580EX MKII.</p>

<p><img src="http://lizard-spock.co.uk/images/Photography/fstop_icu_large_lighting/morganp-20140517-FStop-_MG_8927.jpg" alt="" /></p>

<p>The collapsed soft box is folded into the right hand side. Additional accessories are a <a href="https://www.amazon.co.uk/dp/B0007DDK7A?tag=morgue-21&amp;camp=2902&amp;creative=19466&amp;linkCode=as4&amp;creativeASIN=B0007DDK7A&amp;adid=1VSQ11QZRMHHASH7FHN9&amp;">3M Lastolite off camera cord</a>, <a href="https://www.amazon.co.uk/dp/B002D4AHT0?tag=morgue-21&amp;camp=2902&amp;creative=19466&amp;linkCode=as4&amp;creativeASIN=B002D4AHT0&amp;adid=0PB41F04SGBY01WKVJYB&amp;">Colorvision SpyderCube</a> and a <a href="https://www.amazon.co.uk/dp/B0007DDK7A?tag=morgue-21&amp;camp=2902&amp;creative=19466&amp;linkCode=as4&amp;creativeASIN=B0007DDK7A&amp;adid=1VSQ11QZRMHHASH7FHN9&amp;">Stofen</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kettlebell Rack]]></title>
    <link href="http://lizard-spock.co.uk/blog/home/kettlebell-rack/"/>
    <updated>2014-05-28T18:32:43+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/home/kettlebell-rack</id>
    <content type="html"><![CDATA[<p><img src="http://lizard-spock.co.uk/images/Home/KettlebellRack/morganp-20140518-diy-_MG_8954.jpg" alt="" />
Kettlebell rack with 24kg, 16kg, 8kg, 12kg, 16kg, 20kg.</p>

<p><img src="http://lizard-spock.co.uk/images/Home/KettlebellRack/morganp-20140518-diy-_MG_8960.jpg" alt="" />
End detail showing bracing.</p>

<p><img src="http://lizard-spock.co.uk/images/Home/KettlebellRack/morganp-20140518-diy-_MG_8968.jpg" alt="" />
Underside of rack.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matlab Toolboxes with Absolute Path Setup]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/matlab-toolboxes-with-absolute-path-setup/"/>
    <updated>2014-05-07T18:22:48+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/matlab-toolboxes-with-absolute-path-setup</id>
    <content type="html"><![CDATA[<p>When a script or function is called with <code>run(./relative/path/script)</code> the working directory is changed to the <code>./relative/path</code>. This means <code>pwd</code> it can be used to specify absolute paths:</p>

<pre><code>run(./libs/example_toolbox/load_toolbox)
</code></pre>

<p>Which contains :</p>

<pre><code>addpath([pwd, '/function']);
</code></pre>

<p>Now  The path will contain <code>C:/ ... /libs/example_toolbox/function</code></p>

<p>As shown in the example this is useful for toolboxes etc which could be distributed with a top level script which adds the toolbox functions on to the path.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matlab: Array Content Check]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/matlab-array-content-check/"/>
    <updated>2014-05-07T18:13:24+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/matlab-array-content-check</id>
    <content type="html"><![CDATA[<p>Checking if an Array contains a number:</p>

<pre><code>input = [1,2,3,4];
check = 4;
any(input==4)
</code></pre>

<p>Check if a number is contained in an array:</p>

<pre><code>input = 32;
check = [32,64,128];
any( check==input )
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matlab: Split Odd &amp; Even Array Elements]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/matlab-split-odd-and-even-array-elements/"/>
    <updated>2014-05-07T17:58:33+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/matlab-split-odd-and-even-array-elements</id>
    <content type="html"><![CDATA[<p>Using Matlab to splitting data into odd and even samples.</p>

<p>A for loop approach:</p>

<pre><code>data_odd  = [];
data_even = [];
for i = 1:length(data)
  if mod(i,2)
    %% disp('odd')
    data_odd = [data_odd, data(i)]
  else
    %% disp('even')
    data_even = [data_even, data(i)]
  end
end
</code></pre>

<p>Matlab approach using ranges to remap values:</p>

<pre><code>data_odd =data(1:2:end);
data_even=data(2:2:end);
</code></pre>

<p>Ranges are composed of <code>start_index:step_size:end_index</code>. If step_size is omitted, 1 is assumed.</p>

<p><code>end</code> has a special meaning when used inside an array, it is the position of the last element.
To append to an array you could use <code>data(end+1) = append_value</code></p>

<p>No error or warning is triggered if the <code>end_index</code> can not be reached with the given step size, which is why this works with <code>end</code> as the stop point of both sides.</p>

<h2>Example</h2>

<pre><code>a   = [1, 2, 3, 4, 5];
odd = a(1:2:end)
even= a(2:2:end)

odd =
     1     3     5

even =
     2     4
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lee Standard Hood]]></title>
    <link href="http://lizard-spock.co.uk/blog/photography/lee-standard-hood/"/>
    <updated>2014-05-05T20:36:43+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/photography/lee-standard-hood</id>
    <content type="html"><![CDATA[<p>Available to buy from <a href="http://www.wexphotographic.com/buy-lee-standard-lens-hood/p1010398">WEX</a>. Also see <a href="http://lizard-spock.co.uk/blog/photography/lee-wide-angle-hood/">Lee Wide Angle Hood</a>.</p>

<p>Hoods or lens shades help improve contrast by stopping out of frame light source entering the lens. LEE filters are square filters that can be used for effects or managing dynamic range, however as they mount in front of the lens with a holder you can no longer use your lenses standard hood. LEE have a standard, universal and wide angle hoods available.</p>

<p>LEE do not provide many specs for the hood on their website. To help others decide
if this is right for them I have included measurements and pictures.</p>

<p>The Standard is the smallest of the three hoods.
It actually has a very clever rail system which allows it to be mounted in a slot.
When mounted on to a lee adapter ring this sits further back out of the way.
All Lee products should have this and there would be no need for a tandem connector.</p>

<p><img src="http://lizard-spock.co.uk/images/Photography/LEE/morganp-20140405-Lee-_MG_7257.jpg" alt="" /></p>

<p>Filter weigh 150g</p>

<h2>Dimensions</h2>

<pre><code>Width Height:
External: 13.1cm x 13.1cm
Internal: 11.1cm x 11.1cm

Depth:
Complete compressed: 3.5cm.
</code></pre>

<p>Min expansion</p>

<pre><code>complete    : 4.6cm
hood &amp; mount: 3.6cm
hood only   : 3.1cm
</code></pre>

<p><img src="http://lizard-spock.co.uk/images/Photography/LEE/morganp-20140405-Lee-_MG_7249.jpg" alt="" /></p>

<p>Max Expansion</p>

<pre><code>complete    : 15.0cm
hood &amp; mount: 14.0cm
hood only   : 13.3cm 
</code></pre>

<p><img src="http://lizard-spock.co.uk/images/Photography/LEE/morganp-20140405-Lee-_MG_7251.jpg" alt="" /></p>

<p><strong>This hood is too small for use under 28mm on a full-frame camera.</strong></p>

<p>On a crop sensor it is still good at 16mm</p>

<p>Vignetting examples:
<img src="http://lizard-spock.co.uk/images/Photography/LEE/morganp-20140405-Lee-IMG_0116.jpg" alt="" />
Setup for following examples, Canon 6D, wide angle adapter, Lee holder 3 slots (2 for filters, 1 for hood) then universal hood at minimal expansion.</p>

<p><img src="http://lizard-spock.co.uk/images/Photography/LEE/morganp-20140409--_MG_7416.jpg" title="16mm full-frame" alt="" />
above 16mm full-frame with filter holder</p>

<p><img src="http://lizard-spock.co.uk/images/Photography/LEE/morganp-20140409--_MG_7417.jpg" title="20mm full-frame" alt="" />
above 20mm full-frame with filter holder</p>

<p><img src="http://lizard-spock.co.uk/images/Photography/LEE/morganp-20140409--_MG_7418.jpg" title="24mm full-frame" alt="" />
above 24mm full-frame with filter holder</p>

<p><img src="http://lizard-spock.co.uk/images/Photography/LEE/morganp-20140409--_MG_7419.jpg" title="28mm full-frame" alt="" />
above 28mm full-frame with filter holder</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Licence Types and Short Identifiers]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/licence-types-and-short-identifiers/"/>
    <updated>2014-05-05T20:17:43+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/licence-types-and-short-identifiers</id>
    <content type="html"><![CDATA[<p>Some time ago <a href="http://guides.rubygems.org/specification-reference/">gemspec</a> files for ruby gems added the ability to
specify the short identifier for the license type.</p>

<pre><code>Gem::Specification.new do |s|
  s.licenses    = ['MIT']
end
</code></pre>

<p>The unofficial list of short identifiers is available from <a href="https://spdx.org/licenses/">spdx</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lightroom Load Canon 6D GPS]]></title>
    <link href="http://lizard-spock.co.uk/blog/photography/lightroom-load-canon-6d-gps/"/>
    <updated>2014-04-14T19:01:06+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/photography/lightroom-load-canon-6d-gps</id>
    <content type="html"><![CDATA[<p>Adobe Lightroom will only load GPX, Canon 6D only saves NMEA data.</p>

<p><a href="http://www.gpsbabel.org/">GPSBabel</a> can be used to convert the <code>*.log</code> from the camera to <code>*.gpx</code>.</p>

<p>Download the software then load the log file for the input setting the type to <code>NMEA 0183 sentences</code>.</p>

<p>Set the output file name and set the format to <code>GPX XML</code>. Click OK to generate the GPX which can now be loaded into Lightroom.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Craghoppers Pro Stretch]]></title>
    <link href="http://lizard-spock.co.uk/blog/outdoor/craghoppers-up-to-tricks/"/>
    <updated>2014-04-10T18:12:22+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/outdoor/craghoppers-up-to-tricks</id>
    <content type="html"><![CDATA[<p>Last year I got a pair of the pro stretch trousers for walking, they were pretty good for walking in so good I just went back to get another pair.</p>

<p>There are however some changes to the current versions.</p>

<p>The back of the waist band use to fully elasticated. Now only two small side
sections on the waistband are elasticated this massively reduced the range of
fit the trousers have. So much so they have introduced a larger size to
accommodate the change in fit. This does however bring the styling and
available sizes in-line with the Craghoppers staple Classic Kiwi.</p>

<p>To note my new versions are a size larger, and they still have a small fit than the old ones.</p>

<p>The feel of the new trousers is not as nice as the old ones. They have altered the fabric mix:</p>

<p><code>OLD: 93% Polyamide 7% Elastane</code><br/>
<code>NEW: 96% Polyamide 4% Elastane</code></p>

<!-- more -->


<p>I guess the old ones were just to comfortable and stretchy :(</p>

<p>The old style waist band:<br/>
<img src="http://lizard-spock.co.uk/images/Outdoor/morganp-20140410-CraghopperProStretch-_MG_7421.jpg" title="Old style wasit band" alt="" /></p>

<p>New style Waistband, minimal stretchiness :<br/>
<img src="http://lizard-spock.co.uk/images/Outdoor/morganp-20140410-CraghopperProStretch-_MG_7425.jpg" alt="" />
<img src="http://lizard-spock.co.uk/images/Outdoor/morganp-20140410-CraghopperProStretch-_MG_7426.jpg" alt="" /></p>

<p>Old style thigh pocket, completely external:
<img src="http://lizard-spock.co.uk/images/Outdoor/morganp-20140410-CraghopperProStretch-_MG_7423.jpg" title="Old style thigh pocket, completely external" alt="" /></p>

<p>Inside view of pocket, not much to rub or cause irritation which is good for a close fitting trouser.
<img src="http://lizard-spock.co.uk/images/Outdoor/morganp-20140410-CraghopperProStretch-_MG_7428.jpg" alt="" /></p>

<p>New style, thigh pocket zipper looks very sleek.
<img src="http://lizard-spock.co.uk/images/Outdoor/morganp-20140410-CraghopperProStretch-_MG_7427.jpg" alt="" /></p>

<p>New style, internal thigh pocket cleverly designed for maximum irritation while walking.
<img src="http://lizard-spock.co.uk/images/Outdoor/morganp-20140410-CraghopperProStretch-_MG_7429.jpg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Methods and Splat]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/ruby-methods-and-splat/"/>
    <updated>2014-04-09T19:47:47+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/ruby-methods-and-splat</id>
    <content type="html"><![CDATA[<p>Ruby methods can set default values for optional arguments:</p>

<pre><code>def commit(path=Dir.pwd)
</code></pre>

<p>To take an optional number of arguments a splat can be used:</p>

<pre><code>def amethod( *arg1 )
</code></pre>

<p>The Problem is now to set defaults or require a set number of arguments.</p>

<ol>
<li>Splat arguments can not be defaulted.</li>
<li>The splat can accept zero arguments.</li>
</ol>


<p>The following might be what you would expect for a default in a splat, but this conflicts with its abilliy to accept 0 arguments.</p>

<pre><code>def commit(*path=[Dir.pwd]) ##THIS DOES NOT WORK
</code></pre>

<p>Splats can follow other arguments. To require at least one argument:</p>

<pre><code>def add(files, *files_splat)
</code></pre>

<p>No arguments required but the first has a default:</p>

<pre><code>def commit(path=Dir.pwd, *path_splat)
</code></pre>

<p>These also work as expected in Thor for parsing command line options. I have used them in my <a href="https://github.com/morganp/dssx">dssx</a> gem.</p>

<p>In thor I also add this to the start of my methods to combine <code>path</code> and <code>path_splat</code> which are strings:</p>

<pre><code>path_list = path + ' ' + path_splat * ' '
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thor Adding --verbose]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/thor-adding-verbose/"/>
    <updated>2014-04-09T19:26:44+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/thor-adding-verbose</id>
    <content type="html"><![CDATA[<p>With a command line Ruby application using Thor for the option parsing I want to be able to run:</p>

<pre><code>$ thor_app --version
&gt; thor_app version 1.0.0
</code></pre>

<p>Create a boolean class option, which does not belong to a task, that can be referenced by other tasks. The often used example for a class option is -v verbose, as all tasks can use this to determine how noisy they should be.</p>

<p>Then create a &lsquo;version&rsquo; task and make it the default task, so when no task is defined the version task is ran and can react to the &mdash;version flag (class option).</p>

<pre><code>class CLI &lt; Thor
  #include Thor::Actions
  class_option :version, :type =&gt; :boolean

  desc "version", "Show thor_app version"
  def version
    if options[:version]
      puts "thor_app version #{find_version}"
    end
  end
  default_task :version

  no_tasks do
    def find_version
      ## Method can be replaced to look up VERSION
      '1.0.0'
    end
  end
end
</code></pre>

<p>This is based on <a href="http://stackoverflow.com/q/22809972/97073">my SO Question</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating Lightroom Metadata Views]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/photography/creating-lightroom-metadata-views/"/>
    <updated>2014-04-09T01:28:27+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/photography/creating-lightroom-metadata-views</id>
    <content type="html"><![CDATA[<p>Lightroom plugins for metadata views are called metadata tag sets and only require 2 text files.</p>

<p>create a folder called <code>something.lrdevplugin</code> once you are happy with it it can be renamed <code>something.lrplugin</code></p>

<p>Create a file called Info.lua and Tagset.lua</p>

<p>Info.lua:</p>

<pre><code>return {
  LrSdkVersion = 5.0,
  LrSdkMinimumVersion = 5.0,
  LrToolkitIdentifier = ’sample.metadata',
  LrPluginName = LOC "$$$/CustomMetadata/PluginName=Example View",
  LrMetadataTagsetFactory = ‘Tagset.lua',
}
</code></pre>

<p>Tagset.lua</p>

<pre><code>return {
  title = LOC "$$$/SampleTagset/Title=Example Meta",
  id = ‘Tagset',
  items = {
    {'com.adobe.jobIdentifier', height_in_lines = 1},
    'com.adobe.separator',
    {'com.adobe.title', height_in_lines = 2},
    'com.adobe.separator',
    {'com.adobe.caption', height_in_lines = 6},
  },
}
</code></pre>

<p>The full list of options can be seen from page 63 of the <a href="http://wwwimages.adobe.com/www.adobe.com/content/dam/Adobe/en/devnet/photoshoplightroom/pdfs/lr5/lightroom-sdk-guide.pdf">lightroom sdk guide</a>.</p>

<p>My <a href="https://github.com/morganp/CopyrightMetadataTagset.lrdevplugin">Copyright view</a> and <a href="https://github.com/morganp/CopyrightMetadataTagset.lrdevplugin">JobID view</a>.</p>
]]></content>
  </entry>
  
</feed>
