<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[RockPaperScissors]]></title>
  <link href="http://lizard-spock.co.uk/atom.xml" rel="self"/>
  <link href="http://lizard-spock.co.uk/"/>
  <updated>2015-03-24T19:24:10+00:00</updated>
  <id>http://lizard-spock.co.uk/</id>
  <author>
    <name><![CDATA[Morgan Prior]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OS X Disable Back Gesture]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/os-x-disable-back-gesture/"/>
    <updated>2015-02-18T18:26:07+00:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/os-x-disable-back-gesture</id>
    <content type="html"><![CDATA[<p>After accidentally scrolling back a page when browsing the web in chrome too many times. Figured out how to disable it: from your terminal</p>

<pre><code>defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool FALSE
</code></pre>

<p><a href="http://apple.stackexchange.com/questions/21236/how-do-i-disable-chromes-two-finger-back-forward-navigation">From
http://apple.stackexchange.com</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SystemVerilog: Constrained Random]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/systemverilog-constrained-random/"/>
    <updated>2015-02-18T17:01:56+00:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/systemverilog-constrained-random</id>
    <content type="html"><![CDATA[<p>A minimal example of constrained random to constraining a 4 bit value to 0 to 11 when randomised.</p>

<pre><code>module tb;

  class cr_example_t
    rand bit val;
    rand bit [3:0] sel;

    constrain c1 {
      sel &lt; 12;
    }
  endclass

  cr_example_t cr_example = new;

  initial begin :test_program
    cr_example.randomise();
    $display(cr_example.val);
    $display(cr_example.sel);

    $finish;
  end

endmodule
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Verilog: Thermometer Code]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/verilog-thermometer-code/"/>
    <updated>2015-02-18T16:51:43+00:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/verilog-thermometer-code</id>
    <content type="html"><![CDATA[<p>Efficiently create a <a href="http://en.wikipedia.org/wiki/Unary_coding">thermometer code</a> in verilog:</p>

<pre><code>localparam M = 32;

function [M-1:0] therm_code;
  input    [$clog2(M):0] val;
  begin
    for (int i = 0; i&lt;M; i++) begin
      therm_code[i] = (i&lt;val);
    end
  end
endfunction
</code></pre>

<p>Other methods which do not synthesis as well:</p>

<pre><code>therm_code  = (2**val) - 1;

therm_code = ~({M{1'b1}} &lt;&lt; val);
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim: Macro]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/vim-macro/"/>
    <updated>2015-02-18T16:41:40+00:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/vim-macro</id>
    <content type="html"><![CDATA[<p>When <code>.</code> just will not do (repeats last action) because you need to capture  a movement as well, macros are quick to create and use.</p>

<pre><code>q&lt;number&gt;&lt;actions&gt;q
</code></pre>

<p>Replay macro</p>

<pre><code>@&lt;number&gt; 
</code></pre>

<p>Replay macro 10 times</p>

<pre><code>10@&lt;number&gt;
</code></pre>

<p>Example
Yank and put line, then repeat 10 times.</p>

<pre><code>q1 yyP q

10@1
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Find Your Ruby Gems Path]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/find-your-ruby-gems-path/"/>
    <updated>2015-02-18T16:39:32+00:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/find-your-ruby-gems-path</id>
    <content type="html"><![CDATA[<pre><code> ruby -r rubygems -e "p Gem.path"
</code></pre>

<p>From <a href="http://gilesbowkett.blogspot.co.uk/2009/06/find-your-ruby-gems-path.html">Giles Bowkett</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bread: Doves Gluten Free]]></title>
    <link href="http://lizard-spock.co.uk/blog/cooking/bread-doves-gluten-free/"/>
    <updated>2014-12-21T20:12:44+00:00</updated>
    <id>http://lizard-spock.co.uk/blog/cooking/bread-doves-gluten-free</id>
    <content type="html"><![CDATA[<p>For use with the Panasonic Bread Maker SD-2501 &amp; SD-2500.<br/>
<strong><a href="http://www.lakeland.co.uk/content/documents/Panasonic_Bread_Maker_Instructions_15352.pdf">Online Manual</a>.</strong></p>

<p>Gluten Recipes can not use timer function.</p>

<p>For best results follow this order of ingredients: <br/>
water, salt, fat, gluten free bread mix.</p>

<h2>Doves Farm Gluten Free (Panasonic recipe)</h2>

<p> SD-2501 Menu 12<br/>
 SD-2500 Menu 11</p>

<p> Dark Crust (1hr 55min)</p>

<pre><code>Water              320ml (330ml for Brown flour)
Cider Vinegar      1 teaspoon
Salt               1 teaspoon
Vegtable Oil       4 tablespoon
Medium Egg         1
Medium Egg White   1
Sugar              1 tablespoon
Flour              450g
Yeast              2 teaspoon
</code></pre>

<h2><a href="http://www.dovesfarm.co.uk/recipes/gluten-free-white-bread-for-bread-machines">Doves farm recommends these ingredients</a>:</h2>

<p> SD-2501 Menu 12<br/>
 SD-2500 Menu 11</p>

<p> Dark Crust (1hr 55min)</p>

<pre><code>         Medium        Large
Milk     310g          465g
Vinegar  1 teaspoon    1.5 teaspoon
Oil      6 tablespoon  9   tablespoon
Eggs     2             3
Flour    450g          675g
Salt     1 teaspoon    1.5 teaspoon
Sugar    2 tablespoon  3   tablespoon
Yeast    2 teaspoon    3   teaspoon
</code></pre>

<ol>
<li>Mix milk, vinegar, oil and eggs. Pour into the bread machine.</li>
<li>Add flour, salt and sugar, stir.</li>
<li>Sprinkle Yeast on top</li>
<li>Start machine, pausing after a few minutes to scrape down the sides.</li>
<li>Resume programme until completion</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Verilog: Calculate Primes]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/verilog-calculate-primes/"/>
    <updated>2014-12-20T07:28:41+00:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/verilog-calculate-primes</id>
    <content type="html"><![CDATA[<p>Based on my answer to <a href="http://stackoverflow.com/q/27461173/97073">this SO Question</a>.</p>

<p><strong><a href="http://www.mathsisfun.com/definitions/prime-number.html">Definition of Prime</a>:</strong></p>

<blockquote><p>A Prime Number can be divided evenly only by 1, or itself.
And it must be a whole number greater than 1.</p></blockquote>

<p>A simple method would be to iterate over numbers 2 to N, checking if it was divisible by all natural numbers greater than 2, and below the current value.</p>

<p>Once checked that it is not divisible by 2 there is not point checking for 4, 6, 8 etc.
Remembering the definition of prime all numbers that are not prime are integer multiples of prime. so we have reduced the amount of work involved in testing primality.</p>

<pre><code>parameter        N        = 1000;          
reg       [31:0] prime_number [0:N-1]; Store 0 to N prime numbers
integer          test     ; // Result of primality test
integer          k        ; // Currently looking for k'th prime 
integer          index    ; // Counts 1 to k, indexing previous primes 
integer          number_ut; // Number Under test

reg        [1:0] state   ; 
localparam       S_INC   = 2'b01;
localparam       S_CHECK = 2'b10;

initial begin
  prime_number[0] = 'd2; //Preload first Prime
  state           = S_CHECK; //Check set count first
  number_ut       = 'd3; // Number Under Test
  k               = 'd1; // Position 0 preloaded
  index           = 'd0;
  test            = 'd1;
end

always @(posedge clk ) begin
  if (state == S_INC) begin
    number_ut &lt;= number_ut+1 ;
    state     &lt;= S_CHECK ;
    index     &lt;= 'd0;
    test      &lt;= 'd1; // Safe default
  end
  else if (state == S_CHECK) begin
    if (test == 0) begin
      // Failed Prime test (exact divisor found)
      $display("Reject %3d", number_ut);
      state           &lt;= S_INC ;
    end
    else if (index == k) begin
      //Passed Prime check
      //Use k+1 so that 2 is number 1, 3 is 2nd etc
      $display("Found the %1d th Prime, it is %1d", k+1, number_ut);
      prime_number[k] &lt;= number_ut;
      k               &lt;= k + 1;
      state           &lt;= S_INC ;
    end
    else begin
      test  &lt;= number_ut % prime_number[index] ;
      index &lt;= index + 1;          
    end
  end
end
</code></pre>

<p><a href="http://www.edaplayground.com/x/BzX">Example on EDA Playground</a>.</p>

<p>This is however just a programming exercise as the resulting hardware is likely substantially bigger than just implementing a look up table to the maxim number of primes you can fit in <code>prime_number</code>. The look up table will also be ready from time zero and not need to recompute every time you power up.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tcsh Remove Trailing /]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/tcsh-remove-trailing-slash/"/>
    <updated>2014-10-08T21:15:43+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/tcsh-remove-trailing-slash</id>
    <content type="html"><![CDATA[<pre><code>#!/bin/tcsh

set var = "helloworld/"

## http://dbaspot.com/shell/350417-sed-removing-trailing.html
set var = `echo "$var" | sed -e 's,\(.\)/$,\1,'`

echo $var
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[F-Stop Loka &amp; Tripod]]></title>
    <link href="http://lizard-spock.co.uk/blog/photography/f-stop-loka-and-tripod/"/>
    <updated>2014-09-18T11:28:47+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/photography/f-stop-loka-and-tripod</id>
    <content type="html"><![CDATA[<p>F-stop Loka with side mounted Manfrotto 055XPROB (3 stage carbon), with a Manfrotto 488 rc2 head.</p>

<p><img class="centre" src="http://lizard-spock.co.uk/images/Photography/Loka/morganp-20140416-Loka-_MG_7445.jpg">
<img class="centre" src="http://lizard-spock.co.uk/images/Photography/Loka/morganp-20140416-Loka-_MG_7449.jpg"></p>

<p>Tripod relatively secure in this position, although if not tightly strapped down movement does loosen the straps.</p>

<p>NB: also a thinktank skin 50 mounted on the hip belt.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Word WORD the Difference]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/word-word-the-difference/"/>
    <updated>2014-08-19T06:27:30+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/word-word-the-difference</id>
    <content type="html"><![CDATA[<p>Just realised there is a difference between word and WORD in Vim.</p>

<p>WORD is non-blank delimited by whitespace.
word is alpha-numeric and other non-blank characters delimited by whitespace and punctuation. &lsquo;iskeyword&rsquo; can be used to move delimiters in to part of the selection of the word.</p>

<p>by default :</p>

<pre><code>this-is-four-words
this-is-one-WORD
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[List Files Ignored by Git]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/list-files-ignored-by-git/"/>
    <updated>2014-07-30T20:18:07+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/list-files-ignored-by-git</id>
    <content type="html"><![CDATA[<p><a href="https://www.youtube.com/watch?v=4VBG9FlyiOw">From Github Training &amp; Guides</a>.</p>

<pre><code>git ls-files --others --ignored --exclude-standard
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xkill]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/xkill/"/>
    <updated>2014-07-30T20:16:39+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/xkill</id>
    <content type="html"><![CDATA[<p>I just discovered the <code>xkill</code> command, when a window has crashed you
can call xkill and get a skull and crossbones cursor to kill the application.</p>

<p>It even works well with remote GUI applications (Sun Grid Engine SGE).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Submit to SGE as if Working Locally]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/submit-to-sge-as-if-working-locally/"/>
    <updated>2014-07-30T20:13:23+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/submit-to-sge-as-if-working-locally</id>
    <content type="html"><![CDATA[<p>Setting an alias in you .tcshrc</p>

<pre><code>alias qrun 'qrsh -V -noshell -cwd !*'
</code></pre>

<p>or bash</p>

<pre><code>alias qrun='qrsh -V -noshell -cwd !*'
</code></pre>

<p>Which makes submitting any script to the grid just:</p>

<pre><code>qrun helloworld.sh
</code></pre>

<p>Originally asked on <a href="http://superuser.com/a/751162/42141">superuser</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simulink: Scroll Wheel Erratic Behaviour]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/simulink-scroll-wheel-erratic-behaviour/"/>
    <updated>2014-07-30T20:08:10+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/simulink-scroll-wheel-erratic-behaviour</id>
    <content type="html"><![CDATA[<p>On Mac OS X matlab behaves quite oddly with the track pad zooming
in and out very quickly and erratically to remove this behaviour
<strong>Disable Mouse Scroll Wheel Zoom Behavior</strong>.</p>

<p>To disable the zoom behavior for the scroll wheel:</p>

<pre><code>File &gt; 
  Simulink Preferences &gt; 
    Editor Defaults &gt; 
      Scroll wheel controls zooming preference.
</code></pre>

<p>If you hold the Ctrl key and use the scroll wheel, the scroll wheel behavior is the opposite of how the preference is set.</p>

<p><a href="http://www.mathworks.co.uk/help/simulink/ug/zooming-block-diagrams.html">source</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simulink: Globally Set Sample Time]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/simulink-globally-set-sample-time/"/>
    <updated>2014-07-30T20:01:49+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/simulink-globally-set-sample-time</id>
    <content type="html"><![CDATA[<p>To set each constant in a model to sample time -1:</p>

<pre><code>blks = find_system(dut, 'BlockType', 'Constant');
for i = 1:length(blks)
    set_param(blks{i}, 'SampleTime', '-1');
 end
</code></pre>

<p><a href="http://www.mathworks.co.uk/help/hdlcoder/ug/resource-sharing.html#btg_5ht-1">Source</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simulink: List Programmable Block Properties]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/simulink-list-programmable-block-properties/"/>
    <updated>2014-07-30T20:00:28+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/simulink-list-programmable-block-properties</id>
    <content type="html"><![CDATA[<p>Select a block ie gain in Simulink then in Matlab type:</p>

<pre><code>get(gcbh)
</code></pre>

<p>This shows the list of properties which can be controlled from Matlab. TO change one for example changing the gain paramter from double to a 10 bit fixed point number (<code>sfix10_en9</code>).</p>

<pre><code>set_param(gcbh, 'ParamDataTypeStr', 'fixdt(1,10,9)'); 
</code></pre>

<p><a href="http://www.mathworks.co.uk/matlabcentral/newsreader/view_thread/306640">From Matlab Central</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matlab: Find All Gain Blocks]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/matlab-find-all-gain-blocks/"/>
    <updated>2014-07-30T19:58:53+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/matlab-find-all-gain-blocks</id>
    <content type="html"><![CDATA[<pre><code>find_system('BlockType', 'Gain')
</code></pre>

<p>This will list all gain blocks in currently loaded models. to limit to a particulat model:</p>

<pre><code>find_system('testharness', 'BlockType', 'Gain')
</code></pre>

<p><a href="http://www.mathworks.co.uk/help/simulink/slref/find_system.html">From Mathworks</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Error: Storage Class Specified for Parameter]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/error-storage-class-specified-for-parameter/"/>
    <updated>2014-06-19T20:42:33+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/error-storage-class-specified-for-parameter</id>
    <content type="html"><![CDATA[<pre><code>error: storage class specified for parameter
</code></pre>

<p><a href="http://stackoverflow.com/q/3676969/97073">There is probably a missing semicolon <code>;</code> in a header file!</a> Just written my first C Header and received the above warning. It was indeed due to a missing semicolon.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shell Redirection]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/shell-redirection/"/>
    <updated>2014-06-19T20:10:57+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/shell-redirection</id>
    <content type="html"><![CDATA[<p>To redirect stdout and stderr in bash we use:</p>

<pre><code>./ShellFile.sh &amp;&gt; test.log
</code></pre>

<p>However in tcsh that results in:</p>

<pre><code>Invalid null command.
</code></pre>

<p>Switch the order of <code>&amp;</code> and <code>&gt;</code> in tcsh :</p>

<pre><code>./ShellFile.sh &gt;&amp; test.log
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Floating Point Arithmetic Is Not Associative]]></title>
    <link href="http://lizard-spock.co.uk/blog/engineering/floating-point-arithmetic-is-not-associative/"/>
    <updated>2014-06-19T20:00:45+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/engineering/floating-point-arithmetic-is-not-associative</id>
    <content type="html"><![CDATA[<p>This can be shown with some easy examples:</p>

<pre><code>a = 0.1 +  0.2 + 0.3 ;
b = 0.1 + (0.2 + 0.3);

sprintf('%.20f', a) % Display with 20 fractional places
sprintf('%.20f', b)

ans =
  0.60000000000000008882

ans =
  0.59999999999999997780
</code></pre>

<p>Multiplication examples:</p>

<pre><code>c = 0.1 *  0.2 * 0.3 ;
d = 0.1 * (0.2 * 0.3);

sprintf('%.20f', c)
sprintf('%.20f', d)

ans =
0.00600000000000000099

ans =
0.00600000000000000012
</code></pre>

<p>By default gcc will not rearrange equations for optimal performance as this would change the accuracy.
The GCC flag <code>-ffast-math</code> optimizes equations as if they were associative.</p>

<p>The examples shown here were found on <a href="https://news.ycombinator.com/item?id=7479550">Hacker News</a>.</p>
]]></content>
  </entry>
  
</feed>
