<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[RockPaperScissors]]></title>
  <link href="http://morganp.github.io/atom.xml" rel="self"/>
  <link href="http://morganp.github.io/"/>
  <updated>2014-03-13T20:12:08+00:00</updated>
  <id>http://morganp.github.io/</id>
  <author>
    <name><![CDATA[Morgan Prior]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Macbook Keyboard Light Not Working]]></title>
    <link href="http://morganp.github.io/blog/tech/macbook-keyboard-light-not-working/"/>
    <updated>2014-03-13T20:00:47+00:00</updated>
    <id>http://morganp.github.io/blog/tech/macbook-keyboard-light-not-working</id>
    <content type="html"><![CDATA[<p>Checkout : <a href="http://support.apple.com/kb/HT4882">Apple support</a>.</p>

<p>Disable &lsquo;Adjust keyboard brightness in low light&rsquo;.<br/>
<img src="http://morganp.github.io/images/Tech/Keyboard_low_light.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Tag and Push to Github]]></title>
    <link href="http://morganp.github.io/blog/tech/git-tag-and-push-to-github/"/>
    <updated>2014-03-13T19:16:57+00:00</updated>
    <id>http://morganp.github.io/blog/tech/git-tag-and-push-to-github</id>
    <content type="html"><![CDATA[<pre><code>git tag -a 0.0.1 -m "Tag comment"
git push --tags
</code></pre>

<p><em>Note: The use of <a href="http://semver.org/">major.minor.patch Semantic Versioning</a> is a really good idea.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Beyond the LSB]]></title>
    <link href="http://morganp.github.io/blog/engineering/beyond-the-lsb/"/>
    <updated>2014-03-13T19:07:42+00:00</updated>
    <id>http://morganp.github.io/blog/engineering/beyond-the-lsb</id>
    <content type="html"><![CDATA[<p>If we truncate a number, that is to throw away the LSBs (least significant bits) we loose resolution.</p>

<p>A 4 bit number truncated to 2 bits: <em>numbers shown in binary (Base2).</em></p>

<pre><code>0100
0101
0110
0111 
</code></pre>

<p>Would all become 01.</p>

<h1>Introducing Dither</h1>

<p>Effective dithering increase the accuracy beyond the LSB of the truncated values.
Consider a small fractional value rounded to an integer. Starting with 0.5 with 1 bit random dither:</p>

<pre><code>Input  Dither Sum &amp; truncate
00.1   0.1    01
00.1   0.0    00
00.1   0.1    01
00.1   0.0    00
Average over 4 samples is 0.5
</code></pre>

<p>If the value is below 0.5 this dither scheme will not work, as it would never
round to a full integer.</p>

<p>So we increase the dither to 2 bits. Inputting a constant 0.25, Dither cycling
through all possible values</p>

<pre><code>Input  Dither Sum &amp; truncate
00.01  0.00   00
00.01  0.01   00
00.01  0.10   00
00.01  0.11   01
Average of 4 Samples 0.25
</code></pre>

<p>In the above example we have increased the resolution of the time averaged value
by 2 bits.</p>

<p>For every doubling of the frequency we gain an effective LSB if dithered correctly.
Adding more bits than <code>log2(oversampling rate)</code> of dithering will not gain accuracy.
Although it may help breakup tonal behaviour of a system.</p>

<h2>Summary</h2>

<p>Apply dither to the bits to be truncated. Apply enough bits of dither so it is
possible for the LSB of the required resolution to effect the truncated value.</p>

<p>The increase in resolution is limited to <code>log2(oversampling rate)</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spicy Choclate Cake]]></title>
    <link href="http://morganp.github.io/blog/cooking/spicy-choclate-cake/"/>
    <updated>2014-03-08T09:12:04+00:00</updated>
    <id>http://morganp.github.io/blog/cooking/spicy-choclate-cake</id>
    <content type="html"><![CDATA[<p><img src="http://morganp.github.io/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5189.jpg" alt="" /></p>

<h2>Ingredients</h2>

<p><img src="http://morganp.github.io/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5125.jpg" alt="" /></p>

<p><strong>That is Ginger not stem ginger pictured</strong>, it works, but stem ginger is much better.</p>

<pre><code>          Dark choclate Shavings (for topping)
 25 ml    Espresso
  1 ball  Stem Ginger
  2 large Eggs
175 g     Self Raising Flour
250 g     Golden Caster Sugar
 60 g     Cocoa Powder
150 ml    Butter milk
  2 tsp   Coffee Essence
1/2 tsp   Baking Powder
120 g     Unsalted Butter
 10 g     Unslated Butter (for greasing)
260 g     Icing Sugar
120 ml    Vegatble Oil

 10 g     Unslated Butter
</code></pre>

<p>Pre-heat oven to 180 Degrees. Grease with unslated butter 2 20cm/8inch cake tins, line base with grease proof paper.</p>

<pre><code>250 g     Golden Caster Sugar
120 ml    Vegatble Oil
  2 large Eggs
</code></pre>

<p>Whisk golden caster sugar, vegetable Oil and eggs.</p>

<pre><code>150 ml    Butter milk
 25 ml    Espresso
</code></pre>

<p>Once pale and fluffy add butter milk and espresso, whisk again.</p>

<pre><code>175 g     Self Raising Flour
 60 g     Cocoa Powder
</code></pre>

<p>Slowly add self raising flour and cocoa powder, mixing and folding until well combined.</p>

<p>Add equally into the prepared cake tins, Bake for around 20 minutes, until golden and risen.</p>

<p><img src="http://morganp.github.io/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5157-Edit.jpg" alt="" />
<img src="http://morganp.github.io/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5180.jpg" alt="" /></p>

<p>Leave cakes to cool in tins for about 10 minutes than transfer to rack to cool completely.</p>

<pre><code>  1 ball  Stem Ginger
</code></pre>

<p>Finely chop stem ginger</p>

<pre><code>120 g     Unsalted Butter
260 g     Icing Sugar
</code></pre>

<p><img src="http://morganp.github.io/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5132.jpg" alt="" />
<img src="http://morganp.github.io/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5148.jpg" alt="" />
<img src="http://morganp.github.io/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5150.jpg" alt="" /></p>

<p>Add butter to large bowl and whisk until smooth (about 1 minute).</p>

<p><img src="http://morganp.github.io/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5174.jpg" alt="" /></p>

<p>Gradually add the icing sugar, whisk until light an fluffy.</p>

<pre><code>  2 tsp   Coffee Essence
</code></pre>

<p>Added chopped stem ginger and coffee essence to bowl and whisk until mixed (30 seconds).</p>

<p><img src="http://morganp.github.io/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5183.jpg" alt="" />
<img src="http://morganp.github.io/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5185.jpg" alt="" /></p>

<p>Place one cake on plate, then spread with two thirds of the icing. Add second layer of
cake and cover with remaining icing. Top with cocoa powder or dark chocolate shavings.</p>

<p><img src="http://morganp.github.io/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5189.jpg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matlab Function Outputs]]></title>
    <link href="http://morganp.github.io/blog/engineering/matlab-function-outputs/"/>
    <updated>2014-03-08T08:02:27+00:00</updated>
    <id>http://morganp.github.io/blog/engineering/matlab-function-outputs</id>
    <content type="html"><![CDATA[<p>Handling functions with extraneous leading outputs. For example:</p>

<pre><code>function [a,b] = dummy_function
  a = 10;
  b = 20;
endfunction


[a, b] = dummy_function

a =
    10

b =
    20
</code></pre>

<p>If <code>a</code> is not required it can be replaced with a tilda <code>~</code>.</p>

<pre><code>[~, b] = dummy_function

b =
    20
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bash String Manipulation]]></title>
    <link href="http://morganp.github.io/blog/tech/bash-string-manipulation/"/>
    <updated>2014-03-05T21:32:14+00:00</updated>
    <id>http://morganp.github.io/blog/tech/bash-string-manipulation</id>
    <content type="html"><![CDATA[<p>Removal of substring:</p>

<pre><code>string="test string"
echo $string

remove="test"
short_string=${string#$remove}
echo short_string
</code></pre>

<p>Note that inside the <code>${}</code> <code>string</code> does not have a <code>$</code>, it is implied.
The second half <code>$remove</code> does require it.</p>

<p><a href="http://tldp.org/LDP/abs/html/string-manipulation.html">More info</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Puy Lentil Wellington]]></title>
    <link href="http://morganp.github.io/blog/cooking/puy-lentil-wellington/"/>
    <updated>2014-03-04T18:24:42+00:00</updated>
    <id>http://morganp.github.io/blog/cooking/puy-lentil-wellington</id>
    <content type="html"><![CDATA[<p>Based on a <a href="http://uktv.co.uk/food/recipe/aid/516620">uktv recipe</a>.</p>

<p><img src="http://morganp.github.io/images/Cooking/PuyWellington/morganp-20140225-PuyLentil-IMG_6871.jpg" alt="" /></p>

<h2>Ingredients</h2>

<pre><code>150 g     Puy lentils
400 ml    Water
  3       Onions
  1 tbsp  Sugar
  2 tbsp  Olive oil

  1 tbsp  Rosemary
  1 tbsp  Thyme
375 g     Puff Pastry
</code></pre>

<p><img src="http://morganp.github.io/images/Cooking/PuyWellington/morganp-20140225-PuyLentil-IMG_6852.jpg" alt="" /></p>

<p>Finely dice onion and fry on low heat with olive oil, after a minute or two add
the sugar. Mean while simmer the lentils in water</p>

<p><img src="http://morganp.github.io/images/Cooking/PuyWellington/morganp-20140225-PuyLentil-IMG_6853.jpg" alt="" />
<img src="http://morganp.github.io/images/Cooking/PuyWellington/morganp-20140225-PuyLentil-IMG_6856.jpg" alt="" /></p>

<p>Finely chop the Rosemary and Thyme, add to the onions.
Mix well and keep on a low heat, stir occasionally to stop burning.
When onions are soft (about 15 minutes) take off heat and allow to cool.</p>

<p>Mix Lentils and onions then place into a sheet of puff pastry then fold over to create the wellington, pinching ends together.</p>

<p>Place in oven for 20-25 minutes.</p>

<p><img src="http://morganp.github.io/images/Cooking/PuyWellington/morganp-20140225-PuyLentil-IMG_6858.jpg" alt="" />
<img src="http://morganp.github.io/images/Cooking/PuyWellington/morganp-20140225-PuyLentil-IMG_6864.jpg" alt="" />
<img src="http://morganp.github.io/images/Cooking/PuyWellington/morganp-20140225-PuyLentil-IMG_6871.jpg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress, Pages and Custom Domain]]></title>
    <link href="http://morganp.github.io/blog/tech/octopress/"/>
    <updated>2014-03-04T18:19:25+00:00</updated>
    <id>http://morganp.github.io/blog/tech/octopress</id>
    <content type="html"><![CDATA[<p>In your <code>sources</code> branch, which is the main branch for writing creating posts, create a <code>CNAME</code> file in the sources directory.</p>

<p>vim source/CNAME</p>

<pre><code>your-domain.co.uk
</code></pre>

<p>Then check-in and deploy</p>

<pre><code>git add source/CNAME
rake deploy
</code></pre>

<p>Point your domain to github pages:</p>

<pre><code>A record pointing to 204.232.175.78
</code></pre>

<p>I also redirect www. to the non-www url</p>

<pre><code>CNAME record for www.example.com to example.com  
</code></pre>

<p><a href="http://octopress.org/docs/deploying/github/">Official Docs</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Revert in Git]]></title>
    <link href="http://morganp.github.io/blog/tech/revert-in-git/"/>
    <updated>2014-03-03T19:42:12+00:00</updated>
    <id>http://morganp.github.io/blog/tech/revert-in-git</id>
    <content type="html"><![CDATA[<h1>and Remove Orphaned Commits.</h1>

<p>I use <code>gitx</code> graphical tool on OS X to find the SHAs for commits. Revert back throwing away all changes:</p>

<pre><code>git reset --hard shaqwerty      
</code></pre>

<p>Now delete the orphaned commits.</p>

<pre><code>git reflog expire --expire=now --expire-unreachable=now --all
git gc --prune=now
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OO Magic Bullet?]]></title>
    <link href="http://morganp.github.io/blog/engineering/oo-magic-bullet/"/>
    <updated>2014-03-01T20:04:06+00:00</updated>
    <id>http://morganp.github.io/blog/engineering/oo-magic-bullet</id>
    <content type="html"><![CDATA[<p>I do not think that there are any magic bullets, best practises can minimise risk but you have to fully understand the technique. You can not just switch from procedural code to wrapping everything in an object and claim statements like this from <a href="http://www.mathworks.co.uk/company/newsletters/articles/introduction-to-object-oriented-programming-in-matlab.html">mathworks</a>:</p>

<blockquote><p>Because it was built using OO techniques, the application is now robust enough for others to use and maintain and can be integrated with related applications throughout an organization.</p></blockquote>

<p>Sounds like Object-Oriented programming is a magic bullet to solve all you programming woes!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Edit Octopress Posts]]></title>
    <link href="http://morganp.github.io/blog/tech/edit-octopress-posts/"/>
    <updated>2014-03-01T19:28:17+00:00</updated>
    <id>http://morganp.github.io/blog/tech/edit-octopress-posts</id>
    <content type="html"><![CDATA[<p>Creating new posts in Octopress is <code>rake new_post["Edit Posts"]</code> which outputs the created filename.</p>

<p>Posts are prefixed with date, which can make it difficult to find a particular post to edit. Tab completion can help if you known the year of the post but it may still list 100&rsquo;s of posts where you have to spot the title, and narrow it done via month and day. To get around this I use this script to launch matching posts in my editor:</p>

<pre><code>#!/bin/bash

editor="mvim"
post_path="source/_posts/"

for OUTPUT in $(ls $post_path | grep $1)
do
  file_list="$file_list $post_path$OUTPUT"
done

$editor $file_list
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[$display Without a Line Return]]></title>
    <link href="http://morganp.github.io/blog/engineering/without-a-line-return/"/>
    <updated>2014-03-01T17:49:43+00:00</updated>
    <id>http://morganp.github.io/blog/engineering/without-a-line-return</id>
    <content type="html"><![CDATA[<p>In Verilog to output to stdout without a line return use <code>$write();</code></p>

<p>Equivalent statements :</p>

<pre><code>$write("\n");
$display("");
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rocket &amp; Chilli]]></title>
    <link href="http://morganp.github.io/blog/garden/rocket-and-chilli/"/>
    <updated>2014-02-25T21:23:40+00:00</updated>
    <id>http://morganp.github.io/blog/garden/rocket-and-chilli</id>
    <content type="html"><![CDATA[<p>The first batch of seeds in the propagator are off to a good start.</p>

<p>Rocket:
<img src="http://morganp.github.io/images/Gardening/morganp-20140225-Garden-IMG_6843.jpg" title="Rocket" alt="" /></p>

<p>De Cayenne, Chilli Peppers:
<img src="http://morganp.github.io/images/Gardening/morganp-20140225-Garden-IMG_6848.jpg" title="De Cayenne, Chilli Peppers" alt="" /></p>

<p>Soon will re-pot and start <a href="http://apps.rhs.org.uk/advicesearch/profile.aspx?pid=386">hardening off</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spring]]></title>
    <link href="http://morganp.github.io/blog/garden/spring/"/>
    <updated>2014-02-25T20:42:28+00:00</updated>
    <id>http://morganp.github.io/blog/garden/spring</id>
    <content type="html"><![CDATA[<p>First signs of spring, bulbs starting to show growth.</p>

<p><img src="http://morganp.github.io/images/Gardening/morganp-20140225-Garden-IMG_6851.jpg" title="Bulbs starting to shoot" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gnome: Disable Focus Tracking]]></title>
    <link href="http://morganp.github.io/blog/tech/gnome-disable-focus-tracking/"/>
    <updated>2014-02-20T20:31:44+00:00</updated>
    <id>http://morganp.github.io/blog/tech/gnome-disable-focus-tracking</id>
    <content type="html"><![CDATA[<p>Sometime ago I enabled focus tracking the mouse on Gnome. It took a while to find how to disable it again, so with out further a do the setting can be found in:</p>

<pre><code>System -&gt; Preferences -&gt; Windows
</code></pre>

<p><img src="http://morganp.github.io/images/Tech/Disable_Mouse_focus_tracking.png" alt="" />§</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rocket]]></title>
    <link href="http://morganp.github.io/blog/garden/rocket/"/>
    <updated>2014-02-19T21:08:38+00:00</updated>
    <id>http://morganp.github.io/blog/garden/rocket</id>
    <content type="html"><![CDATA[<p>On Saturday I placed Rocket seeds in my propagator and by Tuesday it had germinated and started to sprout.</p>

<p>So far so good:</p>

<p><img src="http://morganp.github.io/images/Gardening/morganp-20140218-Propagator-IMG_6838.jpg" title="Rocket" alt="Rocket" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Propagator]]></title>
    <link href="http://morganp.github.io/blog/garden/propagator/"/>
    <updated>2014-02-18T20:43:00+00:00</updated>
    <id>http://morganp.github.io/blog/garden/propagator</id>
    <content type="html"><![CDATA[<p>I have always had trouble getting seeds to germinate, therefore I have purchased a <a href="https://www.amazon.co.uk/dp/B000YA43HC?tag=morgue-21&amp;camp=2902&amp;creative=19466&amp;linkCode=as4&amp;creativeASIN=B000YA43HC&amp;adid=18Q38Q8QS33XBPP04WNR&amp;">propagator</a> to help. Ideally I would have a thermostatically controlled unit, but they tend to be a bit more expensive, and non-looked like they wood fit nicely on a windowsill.</p>

<p>Garland Super7, should raise soil temperature by 8 degrees but fluctions of indoor temp will be passed on:</p>

<p><img src="http://morganp.github.io/images/Gardening/morganp-20140218-Propagator-IMG_6827.jpg" title="Garland Super7" alt="Propagator" /></p>

<p>Hopefully I will have some better luck in the future.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Monkey Patch Octopress]]></title>
    <link href="http://morganp.github.io/blog/tech/monkey-patch-octopress/"/>
    <updated>2014-02-18T19:46:55+00:00</updated>
    <id>http://morganp.github.io/blog/tech/monkey-patch-octopress</id>
    <content type="html"><![CDATA[<p>Based on <a href="https://github.com/imathis/octopress/blob/master/plugins/post_filters.rb">post_filters by imathis</a>.</p>

<p>First Move the original method out the way with <code>alias_method</code>  then create a new method with the original name, calling the original now aliased method if required.</p>

<pre><code>module Jekyll
  class URL
    alias_method :old_sanitize_url, :sanitize_url
    def sanitize_url(in_url)
      old_sanitize_url(in_url).downcase
    end
  end
end
</code></pre>

<p>This was used to build my <a href="https://github.com/morganp/octopress_url_downcase">Octopress plugin octopress_url_downcase</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raised Bed]]></title>
    <link href="http://morganp.github.io/blog/garden/raised-bed/"/>
    <updated>2014-02-18T18:58:30+00:00</updated>
    <id>http://morganp.github.io/blog/garden/raised-bed</id>
    <content type="html"><![CDATA[<p>Putting together my first raised bed, 8 foot by 2 foot, 1 plank high.</p>

<p>Cut parts ready for assembly:
<img src="http://morganp.github.io/images/Gardening/RaisedBed/morganp-20140211-RaisedBed-IMG_6743.jpg" alt="Parts" /></p>

<p>The timber is pressure treated softwood from <a href="http://www.dremtimberandfencing.co.uk/">Drem Timber</a>. Cost is around £14 for 16 foot (4.8m).</p>

<p>Parts I got:</p>

<pre><code>4 * 8 foot (2 * 4.8m)
8 * 2 foot (1 * 4.8m)
8 corner stakes (£1 each)
--
£49
</code></pre>

<p>Using right angle clamps to assemble first corner.
<img src="http://morganp.github.io/images/Gardening/RaisedBed/morganp-20140211-RaisedBed-IMG_6746.jpg" alt="First Corner" /></p>

<p>Holding the spikes in place with quick clamps.
<img src="http://morganp.github.io/images/Gardening/RaisedBed/morganp-20140211-RaisedBed-IMG_6751.jpg" alt="Attaching Spike" />
<img src="http://morganp.github.io/images/Gardening/RaisedBed/morganp-20140211-RaisedBed-IMG_6753.jpg" alt="" /></p>

<p>Constructing the second corner.
<img src="http://morganp.github.io/images/Gardening/RaisedBed/morganp-20140211-RaisedBed-IMG_6758.jpg" alt="Second Corner" />
<img src="http://morganp.github.io/images/Gardening/RaisedBed/morganp-20140211-RaisedBed-IMG_6761.jpg" alt="" /></p>

<p>The final side and 2 corners, using 4 right angle clamps to hold it all in place.
<img src="http://morganp.github.io/images/Gardening/RaisedBed/morganp-20140211-RaisedBed-IMG_6766.jpg" alt="Final Corners" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Beef Wellington]]></title>
    <link href="http://morganp.github.io/blog/cooking/beef-wellington/"/>
    <updated>2014-02-17T20:28:28+00:00</updated>
    <id>http://morganp.github.io/blog/cooking/beef-wellington</id>
    <content type="html"><![CDATA[<p><img src="http://morganp.github.io/images/Cooking/BeefWellington/morganp-20140217-BeefWellington-IMG_6820.jpg" alt="Beef Wellington" /></p>

<p>Based on :<br/>
Jamie Olivers Minced Beef Wellington from <a href="https://www.amazon.co.uk/dp/0718148622?tag=morgue-21&amp;camp=2902&amp;creative=19466&amp;linkCode=as4&amp;creativeASIN=0718148622&amp;adid=0Q3BGF7F6R1CK541XSZG&amp;">Jamie&rsquo;s Ministry of Food</a>.</p>

<p><img src="http://morganp.github.io/images/Cooking/BeefWellington/morganp-20140217-BeefWellington-IMG_6774.jpg" alt="Ingredients" /></p>

<p>Ingredients (for 4-6) :</p>

<pre><code>  1         Large Potato
  1         Medium Onion
  1         Carrot
  1  Stick  Celery
  2  Cloves Garlic
  2         Large Mushrooms
  4  Sprigs Fresh Rosemarry
 50 g       Frozen Peas
  1         Large Egg
500 g       Puff Pastry (or 2 300g sheets)
</code></pre>

<p>Pre-heat oven to 180.</p>

<pre><code>  1         Large Potato
  1         Medium Onion
  1         Carrot
  1  Stick  Celery
</code></pre>

<p>Add a olive oil to a frying pan start on a medium heat.
Chop vegetables in to 1cm cubes, Potatoes, Onion, Carrot and Celery.
Add to frying pan as you go.<br/>
<img src="http://morganp.github.io/images/Cooking/BeefWellington/morganp-20140217-BeefWellington-IMG_6782.jpg" alt="Chop" /></p>

<pre><code>  2  Cloves Garlic
  2         Large Mushrooms
</code></pre>

<p>Grate garlic into pan, rough chop mushrooms into 1cm chunks.
<img src="http://morganp.github.io/images/Cooking/BeefWellington/morganp-20140217-BeefWellington-IMG_6786.jpg" alt="Grate" /></p>

<pre><code>  4  Sprigs Fresh Rosemarry
</code></pre>

<p>Remove Rosemary leaves and finely dice.
<img src="http://morganp.github.io/images/Cooking/BeefWellington/morganp-20140217-BeefWellington-IMG_6796.jpg" alt="Rosemary" /></p>

<pre><code> 50 g       Frozen Peas
</code></pre>

<p>After 8 minutes, add frozen peas to pan and cook for 1 minute more.
<img src="http://morganp.github.io/images/Cooking/BeefWellington/morganp-20140217-BeefWellington-IMG_6792.jpg" alt="Fry" />
<img src="http://morganp.github.io/images/Cooking/BeefWellington/morganp-20140217-BeefWellington-IMG_6799.jpg" alt="Peas" /></p>

<pre><code>  1/2       Large Egg
</code></pre>

<p>Move mixture to a large mixing bowl to cool, Once cool mix in the beef with salt and half a beaten egg.
<img src="http://morganp.github.io/images/Cooking/BeefWellington/morganp-20140217-BeefWellington-IMG_6803.jpg" alt="Mixing Bowl" />
<img src="http://morganp.github.io/images/Cooking/BeefWellington/morganp-20140217-BeefWellington-IMG_6804.jpg" alt="Mince" /></p>

<pre><code>500 g       Puff Pastry (or 2 300g sheets)
  1/2       Large Egg
</code></pre>

<p>Roll out the pastry into tea towel size, or unroll the sheets. Add mixture into the middle and roll up sealing the ends. Apply second half of beaten egg to the top of the wellington with a pastry brush.
<img src="http://morganp.github.io/images/Cooking/BeefWellington/morganp-20140217-BeefWellington-IMG_6807.jpg" alt="Pastry" />
<img src="http://morganp.github.io/images/Cooking/BeefWellington/morganp-20140217-BeefWellington-IMG_6808.jpg" alt="" />
<img src="http://morganp.github.io/images/Cooking/BeefWellington/morganp-20140217-BeefWellington-IMG_6811.jpg" alt="" />
<img src="http://morganp.github.io/images/Cooking/BeefWellington/morganp-20140217-BeefWellington-IMG_6812.jpg" alt="" />
<img src="http://morganp.github.io/images/Cooking/BeefWellington/morganp-20140217-BeefWellington-IMG_6814.jpg" alt="Wellingtons ready for oven" /></p>

<p>Put in the oven for 180 Degrees for an hour.</p>

<p><img src="http://morganp.github.io/images/Cooking/BeefWellington/morganp-20140217-BeefWellington-IMG_6820.jpg" alt="Beef Wellington" /></p>
]]></content>
  </entry>
  
</feed>
