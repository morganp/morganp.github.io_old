<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tech | RockPaperScissors]]></title>
  <link href="http://lizard-spock.co.uk/blog/tech/atom.xml" rel="self"/>
  <link href="http://lizard-spock.co.uk/"/>
  <updated>2014-07-30T20:22:16+01:00</updated>
  <id>http://lizard-spock.co.uk/</id>
  <author>
    <name><![CDATA[Morgan Prior]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[List Files Ignored by Git]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/list-files-ignored-by-git/"/>
    <updated>2014-07-30T20:18:07+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/list-files-ignored-by-git</id>
    <content type="html"><![CDATA[<p><a href="https://www.youtube.com/watch?v=4VBG9FlyiOw">From Github Training &amp; Guides</a>.</p>

<pre><code>git ls-files --others --ignored --exclude-standard
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xkill]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/xkill/"/>
    <updated>2014-07-30T20:16:39+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/xkill</id>
    <content type="html"><![CDATA[<p>I just discovered the <code>xkill</code> command, when a window has crashed you
can call xkill and get a skull and crossbones cursor to kill the application.</p>

<p>It even works well with remote GUI applications (Sun Grid Engine SGE).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Error: Storage Class Specified for Parameter]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/error-storage-class-specified-for-parameter/"/>
    <updated>2014-06-19T20:42:33+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/error-storage-class-specified-for-parameter</id>
    <content type="html"><![CDATA[<pre><code>error: storage class specified for parameter
</code></pre>

<p><a href="http://stackoverflow.com/q/3676969/97073">There is probably a missing semicolon <code>;</code> in a header file!</a> Just written my first C Header and received the above warning. It was indeed due to a missing semicolon.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shell Redirection]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/shell-redirection/"/>
    <updated>2014-06-19T20:10:57+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/shell-redirection</id>
    <content type="html"><![CDATA[<p>To redirect stdout and stderr in bash we use:</p>

<pre><code>./ShellFile.sh &amp;&gt; test.log
</code></pre>

<p>However in tcsh that results in:</p>

<pre><code>Invalid null command.
</code></pre>

<p>Switch the order of <code>&amp;</code> and <code>&gt;</code> in tcsh :</p>

<pre><code>./ShellFile.sh &gt;&amp; test.log
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Categories with Different Styles]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/octopress-categories-with-different-styles/"/>
    <updated>2014-06-14T08:24:01+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/octopress-categories-with-different-styles</id>
    <content type="html"><![CDATA[<p>As I use the code blocks for ingredient lists on my recipe pages I wanted to
have a different style, lighter background instead of black.</p>

<p>I currently manually set a different layout in the _post header:</p>

<pre><code>layout: post
categories: 
- Tech

layout: recipe
categories: 
- Cooking
</code></pre>

<!-- more -->


<p>The layout will then look for a matching layout in <code>source/_layouts</code></p>

<p>Manually create your new layout (instructions from top level Octopress site):</p>

<pre><code>cp source/_layouts/post.html source/_layouts/recipe.html
</code></pre>

<p>Edit <code>source/_layouts/recipe.html</code> changing the role to <code>recipe</code>:</p>

<pre><code>---
layout: default
single: true
---

&lt;div&gt;
&lt;article class="hentry" role="recipe"&gt;
  \{\% include article.html \%\}
  &lt;footer&gt;
    &lt;p class="meta"&gt;
</code></pre>

<p>This will now pick up the styling that <code>post</code> also gets but we can target our modifications to <code>article[role="recipe"]</code>.
For custom stylings apply changes in to the relevant file in <code>sass/custom/</code>.</p>

<p>To modify the background colour of a code block<br/>
<code>sass/custom/_styles.scss</code> add:</p>

<pre><code>// Customise the recipe layout
article[role="recipe"] pre {
  background-color: $sidebar-bg;
}
</code></pre>

<p>NB: <code>$sidebar-bg</code> is defined in <code>sass/base/_theme.scss</code></p>
]]></content>
  </entry>
  
</feed>
