<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tech | RockPaperScissors]]></title>
  <link href="http://morganp.github.io/blog/tech/atom.xml" rel="self"/>
  <link href="http://morganp.github.io/"/>
  <updated>2014-03-01T20:19:22+00:00</updated>
  <id>http://morganp.github.io/</id>
  <author>
    <name><![CDATA[Morgan Prior]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Edit Octopress Posts]]></title>
    <link href="http://morganp.github.io/blog/tech/edit-octopress-posts/"/>
    <updated>2014-03-01T19:28:17+00:00</updated>
    <id>http://morganp.github.io/blog/tech/edit-octopress-posts</id>
    <content type="html"><![CDATA[<p>Creating new posts in Octopress is <code>rake new_post["Edit Posts"]</code> which outputs the created filename.</p>

<p>Posts are prefixed with date, which can make it difficult to find a particular post to edit. Tab completion can help if you known the year of the post but it may still list 100&rsquo;s of posts where you have to spot the title, and narrow it done via month and day. To get around this I use this script to launch matching posts in my editor:</p>

<pre><code>#!/bin/bash

editor="mvim"
post_path="source/_posts/"

for OUTPUT in $(ls $post_path | grep $1)
do
  file_list="$file_list $post_path$OUTPUT"
done

$editor $file_list
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gnome: Disable Focus Tracking]]></title>
    <link href="http://morganp.github.io/blog/tech/gnome-disable-focus-tracking/"/>
    <updated>2014-02-20T20:31:44+00:00</updated>
    <id>http://morganp.github.io/blog/tech/gnome-disable-focus-tracking</id>
    <content type="html"><![CDATA[<p>Sometime ago I enabled focus tracking the mouse on Gnome. It took a while to find how to disable it again, so with out further a do the setting can be found in:</p>

<pre><code>System -&gt; Preferences -&gt; Windows
</code></pre>

<p><img src="/images/Tech/Disable_Mouse_focus_tracking.png" alt="" />§</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Monkey Patch Octopress]]></title>
    <link href="http://morganp.github.io/blog/tech/monkey-patch-octopress/"/>
    <updated>2014-02-18T19:46:55+00:00</updated>
    <id>http://morganp.github.io/blog/tech/monkey-patch-octopress</id>
    <content type="html"><![CDATA[<p>Based on <a href="https://github.com/imathis/octopress/blob/master/plugins/post_filters.rb">post_filters by imathis</a>.</p>

<p>First Move the original method out the way with <code>alias_method</code>  then create a new method with the original name, calling the original now aliased method if required.</p>

<pre><code>module Jekyll
  class URL
    alias_method :old_sanitize_url, :sanitize_url
    def sanitize_url(in_url)
      old_sanitize_url(in_url).downcase
    end
  end
end
</code></pre>

<p>This was used to build my <a href="https://github.com/morganp/octopress_url_downcase">Octopress plugin octopress_url_downcase</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Brew Update Fail]]></title>
    <link href="http://morganp.github.io/blog/tech/brew-update-fail/"/>
    <updated>2014-02-11T21:17:24+00:00</updated>
    <id>http://morganp.github.io/blog/tech/brew-update-fail</id>
    <content type="html"><![CDATA[<p>Received the following errors when doing <code>brew update</code> on mountain lion:</p>

<pre><code>error: The following untracked working tree files would be overwritten by merge:
        Library/Formula/platypus.rb
Please move or remove them before you can merge.
Aborting
Error: Failure while executing: git pull -q origin refs/heads/master:refs/remotes/origin/master
</code></pre>

<p>A solution found on <a href="http://stackoverflow.com/questions/10762859/brew-update-the-following-untracked-working-tree-files-would-be-overwritten-by">Stackoverflow</a></p>

<pre><code>cd /usr/local
git fetch origin
git reset --hard origin/master
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reverting in Git]]></title>
    <link href="http://morganp.github.io/blog/tech/reverting-in-git/"/>
    <updated>2014-01-08T20:10:31+00:00</updated>
    <id>http://morganp.github.io/blog/tech/Reverting-in-git</id>
    <content type="html"><![CDATA[<p>I use to use <code>svn revert</code> to roll back local modification and get back to the state I was in last time I checked out.</p>

<p>to do the same in git  I use :</p>

<pre><code>git checkout -- filename
</code></pre>

<p>As git does not automatically push to a server the way subversion does you have an opportunity to revert local commits.</p>

<pre><code>git reset --soft HEAD^
</code></pre>

<p>Here the <code>^</code> means previous. ie go back 1 commit. Using soft the files will still appear modified and we can use the previous command to reset the files as required.</p>

<p>Further reading <a href="http://stackoverflow.com/q/2530060/97073">what “git reset” does in plain english?</a>, <a href="http://marklodato.github.io/visual-git-guide/index-en.html">Visual Git Reference</a> and <a href="http://git-scm.com/blog/2011/07/11/reset.html">Reset Demystified</a></p>

<p>&mdash;
<a href="http://www.norbauer.com/rails-consulting/notes/git-revert-reset-a-single-file.html">git checkout source</a>.  <br/>
<a href="http://stackoverflow.com/questions/2845731/how-to-uncommit-my-last-commit-in-git">git reset source</a>.</p>
]]></content>
  </entry>
  
</feed>
