<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tech | RockPaperScissors]]></title>
  <link href="http://lizard-spock.co.uk/blog/tech/atom.xml" rel="self"/>
  <link href="http://lizard-spock.co.uk/"/>
  <updated>2014-04-01T20:46:07+01:00</updated>
  <id>http://lizard-spock.co.uk/</id>
  <author>
    <name><![CDATA[Morgan Prior]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Thor Variable Arguments]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/thor-variable-arguments/"/>
    <updated>2014-04-01T19:39:19+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/thor-variable-arguments</id>
    <content type="html"><![CDATA[<p><a href="http://whatisthor.com/">Thor</a> is a Ruby Gem, which allows you to build command line applications which accept commands, in the same way <code>git</code> accepts <code>add</code> as a command.</p>

<p>The Helloworld example :</p>

<pre><code>require "thor"

class MyCLI &lt; Thor
  desc "hello NAME", "say hello to NAME"
  def hello(name)
    puts "Hello #{name}"
  end
end
MyCLI.start(ARGV)
</code></pre>

<p>The help and single input.</p>

<pre><code>$ ruby thor_test.rb help hello
&gt; Usage:
&gt;  thor_test.rb hello NAME
&gt;
&gt; say hello to NAME


$ ruby thor_test.rb Hello a
&gt; Hello a
</code></pre>

<p>Now with multiple, inputs:</p>

<pre><code>$ ruby thor_test.rb Hello a b
&gt; thor_test.rb hello requires at least 1 argument: "thor_test.rb hello NAME”.
</code></pre>

<p>Not really what you want if you were building a command like <code>git add</code> when you
would want all following arguments as inputs.</p>

<p>To accept a variable number of arguments is not Thor specific but a standard
ruby idiom. A splat in front of your variable ie <code>*name</code>.</p>

<pre><code>require "thor"

class MyCLI &lt; Thor
  desc "hello NAME", "say hello to NAME"
  def hello(*name)
    puts "Hello #{name * “ "}"
  end
end
MyCLI.start(ARGV)

$ ruby thor_test.rb Hello a b
&gt; Hello a b
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Print Array]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/ruby-print-array/"/>
    <updated>2014-04-01T18:36:00+01:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/ruby-print-array</id>
    <content type="html"><![CDATA[<p><code>puts</code> and <code>to_s</code> could be better:</p>

<pre><code>a = [1, 2, 3]
puts a
&gt; 1
&gt; 2
&gt; 3

puts a.to_s
&gt; [1, 2, 3]
</code></pre>

<h2>Nicely print an array</h2>

<p>Multiply it out with spaces:</p>

<pre><code>a = [1, 2, 3]
puts a * " "
&gt; 1 2 3
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Screen Scrollback]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/screen-scrollback/"/>
    <updated>2014-03-25T20:57:28+00:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/screen-scrollback</id>
    <content type="html"><![CDATA[<p>Enter copy mode</p>

<pre><code>ctrl-a [
</code></pre>

<p>Use cursors of vim motions to move to relevant area.</p>

<p>Space to start selection, space again to end selection and copy to screen copy-buffer</p>

<p>Move to virtual screen terminal where you want to paste then</p>

<pre><code>ctrl-a ]
</code></pre>

<p>To paste to file enter</p>

<pre><code>cat &gt; paste.file
#// Then press ctrl-a ]
</code></pre>

<p><a href="http://commandliners.com/2009/12/screen-working-with-the-scrollback-buffer/">More notes on screen scrollback history</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mavericks Disable Mail Sound]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/mavericks-disable-mail-sound/"/>
    <updated>2014-03-18T17:41:49+00:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/mavericks-disable-mail-sound</id>
    <content type="html"><![CDATA[<p>Since upgrading to Mavericks I get a sound whenever I get mail. I find this very annoying so first port of call is to disable &lsquo;Play user interface sound effects&rsquo; from  System Preferences &ndash;> Sound.</p>

<p>This did not work, I found a separate option in mail for playing a sound on incoming mail, disabled that and other actions if you want.</p>

<p><img src="/images/Tech/Disable_mail_sound.png" alt="" /></p>

<p><em>NB: On checking things to write this I found that &lsquo;Play user interface sound effects&rsquo; had been enabled again.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Iterate Over Lines in a String]]></title>
    <link href="http://lizard-spock.co.uk/blog/tech/ruby-iterate-over-lines-in-a-string/"/>
    <updated>2014-03-13T21:03:54+00:00</updated>
    <id>http://lizard-spock.co.uk/blog/tech/ruby-iterate-over-lines-in-a-string</id>
    <content type="html"><![CDATA[<pre><code>str.each_line do |line|
  #do something with line
end
</code></pre>

<p><a href="http://stackoverflow.com/a/601892/97073">Source</a>.</p>
]]></content>
  </entry>
  
</feed>
