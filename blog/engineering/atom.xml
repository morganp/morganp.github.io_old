<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Engineering | RockPaperScissors]]></title>
  <link href="http://morganp.github.io/blog/engineering/atom.xml" rel="self"/>
  <link href="http://morganp.github.io/"/>
  <updated>2014-03-16T20:33:02+00:00</updated>
  <id>http://morganp.github.io/</id>
  <author>
    <name><![CDATA[Morgan Prior]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Beyond the LSB]]></title>
    <link href="http://morganp.github.io/blog/engineering/beyond-the-lsb/"/>
    <updated>2014-03-13T19:07:42+00:00</updated>
    <id>http://morganp.github.io/blog/engineering/beyond-the-lsb</id>
    <content type="html"><![CDATA[<p>If we truncate a number, that is to throw away the LSBs (least significant bits) we loose resolution.</p>

<p>A 4 bit number truncated to 2 bits: <em>numbers shown in binary (Base2).</em></p>

<pre><code>0100
0101
0110
0111 
</code></pre>

<p>Would all become 01.</p>

<h1>Introducing Dither</h1>

<p>Effective dithering increase the accuracy beyond the LSB of the truncated values.
Consider a small fractional value rounded to an integer. Starting with 0.5 with 1 bit random dither:</p>

<pre><code>Input  Dither Sum &amp; truncate
00.1   0.1    01
00.1   0.0    00
00.1   0.1    01
00.1   0.0    00
Average over 4 samples is 0.5
</code></pre>

<p>If the value is below 0.5 this dither scheme will not work, as it would never
round to a full integer.</p>

<p>So we increase the dither to 2 bits. Inputting a constant 0.25, Dither cycling
through all possible values</p>

<pre><code>Input  Dither Sum &amp; truncate
00.01  0.00   00
00.01  0.01   00
00.01  0.10   00
00.01  0.11   01
Average of 4 Samples 0.25
</code></pre>

<p>In the above example we have increased the resolution of the time averaged value
by 2 bits.</p>

<p>For every doubling of the frequency we gain an effective LSB if dithered correctly.
Adding more bits than <code>log2(oversampling rate)</code> of dithering will not gain accuracy.
Although it may help breakup tonal behaviour of a system.</p>

<h2>Summary</h2>

<p>Apply dither to the bits to be truncated. Apply enough bits of dither so it is
possible for the LSB of the required resolution to effect the truncated value.</p>

<p>The increase in resolution is limited to <code>log2(oversampling rate)</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matlab Function Outputs]]></title>
    <link href="http://morganp.github.io/blog/engineering/matlab-function-outputs/"/>
    <updated>2014-03-08T08:02:27+00:00</updated>
    <id>http://morganp.github.io/blog/engineering/matlab-function-outputs</id>
    <content type="html"><![CDATA[<p>Handling functions with extraneous leading outputs. For example:</p>

<pre><code>function [a,b] = dummy_function
  a = 10;
  b = 20;
endfunction


[a, b] = dummy_function

a =
    10

b =
    20
</code></pre>

<p>If <code>a</code> is not required it can be replaced with a tilda <code>~</code>.</p>

<pre><code>[~, b] = dummy_function

b =
    20
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matlab Shuffle Array]]></title>
    <link href="http://morganp.github.io/blog/engineering/matlab-shuffle-array/"/>
    <updated>2014-03-06T20:42:57+00:00</updated>
    <id>http://morganp.github.io/blog/engineering/matlab-shuffle-array</id>
    <content type="html"><![CDATA[<p>To shuffle a:</p>

<pre><code>a(randperm(length(a)))
</code></pre>

<p>Example:</p>

<pre><code>a = [10 2 5 20];
a = a(randperm(length(a)))

a =

 5    10     2    20
</code></pre>

<p><a href="http://www.mathworks.co.uk/matlabcentral/newsreader/view_thread/239478">Source</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OO Magic Bullet?]]></title>
    <link href="http://morganp.github.io/blog/engineering/oo-magic-bullet/"/>
    <updated>2014-03-01T20:04:06+00:00</updated>
    <id>http://morganp.github.io/blog/engineering/oo-magic-bullet</id>
    <content type="html"><![CDATA[<p>I do not think that there are any magic bullets, best practises can minimise risk but you have to fully understand the technique. You can not just switch from procedural code to wrapping everything in an object and claim statements like this from <a href="http://www.mathworks.co.uk/company/newsletters/articles/introduction-to-object-oriented-programming-in-matlab.html">mathworks</a>:</p>

<blockquote><p>Because it was built using OO techniques, the application is now robust enough for others to use and maintain and can be integrated with related applications throughout an organization.</p></blockquote>

<p>Sounds like Object-Oriented programming is a magic bullet to solve all you programming woes!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[$display Without a Line Return]]></title>
    <link href="http://morganp.github.io/blog/engineering/without-a-line-return/"/>
    <updated>2014-03-01T17:49:43+00:00</updated>
    <id>http://morganp.github.io/blog/engineering/without-a-line-return</id>
    <content type="html"><![CDATA[<p>In Verilog to output to stdout without a line return use <code>$write();</code></p>

<p>Equivalent statements :</p>

<pre><code>$write("\n");
$display("");
</code></pre>
]]></content>
  </entry>
  
</feed>
